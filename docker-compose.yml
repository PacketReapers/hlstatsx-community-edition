version: '2.2'
services:
  # 1. Counter-Strike 1.6 gameserver sends UDP logs to source-udp-forwarder
  # See: https://github.com/startersclan/docker-sourceservers
  cstrike:
    image: goldsourceservers/cstrike:latest
    volumes:
      - dns-volume:/dns:ro
    # network_mode: host
    networks:
      - default
    stdin_open: true
    tty: true
    stop_signal: SIGKILL
    depends_on:
      - source-udp-forwarder
    entrypoint:
      - /bin/bash
    command:
      - -c
      - |
          set -eu
          exec hlds_linux -console -noipx -secure -game cstrike +map de_dust2 +maxplayers 32 +sv_lan 0 +ip 0.0.0.0 +port 27015 +log on +logaddress_add "$$( cat /dns/source-udp-forwarder )" 26999

  # 2. The proxy forwards gameserver logs to the daemon
  # source-udp-forwarder: https://github.com/startersclan/source-udp-forwarder
  source-udp-forwarder:
    image: startersclan/source-udp-forwarder:latest
    environment:
      - UDP_LISTEN_ADDR=:26999
      - UDP_FORWARD_ADDR=127.0.0.1:27500
      - FORWARD_PROXY_KEY=somedaemonsecret # The daemon's proxy_key secret
      - FORWARD_GAMESERVER_IP=192.168.1.100 # The gameserver's IP as registered in the HLStatsX:CE database
      - FORWARD_GAMESERVER_PORT=27015 # The gameserver's IP as registered in the HLStatsX:CE database
      - LOG_LEVEL=INFO
      - LOG_FORMAT=txt
    volumes:
      - dns-volume:/dns
    # network_mode: host
    networks:
      - default
    entrypoint:
      - /bin/sh
    command:
      - -c
      - |
          set -eu

          echo "Outputting my IP address"
          ip addr show eth0 | grep 'inet ' | awk '{print $$2}' | cut -d '/' -f1 | tee /dns/source-udp-forwarder

          exec /source-udp-forwarder

  # 3. HLStatsX:CE perl daemon accepts the gameserver logs. Gameserver Logs are parsed and stats are recorded
  # The daemon's proxy_key secret can only be setup in the HLStatsX:CE Web Admin Panel and not via env vars
  # HLStatsX:CE perl daemon: https://github.com/startersclan/docker-hlstatsxce-daemon
  # NOTE: Currently, as of v1.6.19, the daemon crashes upon startup. You will need to fix perl errors and rebuild the image.
  daemon:
    build:
      dockerfile: Dockerfile.daemon
      context: .
    environment:
      - LOG_LEVEL=2
      # - DB_HOST=db:3306
      # - DB_NAME=hlstatsxce
      # - DB_USER=hlstatsxce
      # - DB_PASSWORD=hlstatsxce
      - DNS_RESOLVE_IP=false
      - LISTEN_IP=
      - LISTEN_PORT=27500
      - RCON=true
    volumes:
      - ./scripts:/scripts:ro
    # command:
    #   - perl
    #   - hlstats.pl
    # network_mode: host
    networks:
      - default

  # 4. The DB for HLStatsX:CE
  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=root    # Username 'root', password 'root'
      - MYSQL_USER=hlstatsxce
      - MYSQL_PASSWORD=hlstatsxce
      - MYSQL_DATABASE=hlstatsxce
    volumes:
      - db-volume:/var/lib/mysql
      - ./sql/install.sql:/docker-entrypoint-initdb.d/install.sql:ro
    # network_mode: host
    networks:
      - default

  # 5. The web frontend
  web-nginx:
    image: nginx:1.21-alpine
    volumes:
      - ./src/web:/src/web
      - ./config/web/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8081:80
    networks:
      - default
    depends_on:
      - init-container
      - web-php
    working_dir: /src

  web-php:
    build:
      dockerfile: Dockerfile.web-php.dev
      context: .
    volumes:
      - ./src/web:/src/web
      - ./config/web/config.php:/src/web/config.php:ro # Main config file
      - ./config/web/php/conf.d/php.ini:/usr/local/etc/php/conf.d/php.ini:ro
      - ./config/web/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:ro
    networks:
      - default
    extra_hosts:
      # For xdebug to reach the host via `host.docker.internal`. See: https://github.com/moby/moby/pull/40007#issuecomment-578729356 and https://stackoverflow.com/questions/49907308/installing-xdebug-in-docker
      # If xdebug does not work, you may need to add an iptables rule to the INPUT chain: iptables -A INPUT -i br+ -j ACCEPT
      - host.docker.internal:host-gateway
    depends_on:
      - init-container

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      - PMA_HOST=db
    ports:
      - 8083:80
    networks:
      - default

  init-container:
    image: alpine:latest
    volumes:
      - ./:/src
      - db-volume:/var/lib/mysql
    networks:
      - default
    entrypoint:
      - /bin/sh
    command:
      - -c
      - |
          set -eu

          echo "Granting web nginx and php read permissions"
          find /src/web -type d -exec chmod 755 {} \;
          find /src/web -type f -exec chmod 644 {} \;

          echo "Granting web php write permissions"
          chmod 777 /src/web/hlstatsimg/progress
          chmod 777 /src/web/hlstatsimg/graph

          echo "Granting db write permissions"
          chown -R 999:999 /var/lib/mysql

networks:
  default:

volumes:
  dns-volume:
  db-volume:
